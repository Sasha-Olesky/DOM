export interface Range {
    min?: number;
    max?: number;
}
export declare type Location = {
    zip?: string;
    country?: string;
    state?: string;
    city?: string;
    lat?: number;
    lon?: number;
    distance?: number;
    full?: string;
};
export declare type Available = {
    startTime?: number;
    endTime?: number;
};
export interface BaseItem {
    id: string;
    title: string;
    url: string;
    photoUrl: string;
    additionalPhotoUrls?: string[];
    available?: Available;
    seller?: string;
    category?: string;
    attributes?: {};
}
export interface HotelItem extends BaseItem {
    location: Location;
    attributes?: {
        price?: Range;
        priceUnit?: string;
        accommodation?: string;
        facilities?: string[];
        starRating?: Range;
        guestRating?: Range;
    };
}
export interface TransportItem extends BaseItem {
    location: Location;
    attributes?: {
        price?: Range;
        priceUnit?: string;
        make?: string;
        model?: string;
        trim?: string;
        color?: string;
        year?: Range;
        odometer?: Range;
        odometerUnit?: string;
        length?: Range;
        drivetrain?: string;
        transmission?: string;
        type?: string;
        fuel?: string;
    };
}
export interface PetItem extends BaseItem {
    location: Location;
    attributes?: {
        price?: Range;
        priceUnit?: string;
        breed?: string;
        age?: string;
        gender?: string[];
    };
}
export interface HomeItem extends BaseItem {
    location: Location;
    attributes?: {
        price?: Range;
        priceUnit?: string;
        beds?: Range;
        baths?: Range;
        area?: Range;
    };
}
export interface VacationItem extends BaseItem {
    location: Location;
    attributes?: {
        price?: Range;
        priceUnit?: string;
        beds?: Range;
        accommodation?: string;
    };
}
export interface FoodItem extends BaseItem {
    location: Location;
    attributes?: {
        price?: Range;
        cuisine?: string[];
        rate?: Range;
        starRating?: Range;
    };
}
export interface ProductItem extends BaseItem {
    location?: Location;
    attributes?: {
        price?: Range;
        priceUnit?: string;
        year?: Range;
        condition?: ('New' | 'Used')[];
        marketplace?: 'Classified' | 'Retail';
        make?: string;
        model?: string;
        trim?: string;
        color?: string;
        odometer?: Range;
        odometerUnit?: string;
        length?: Range;
        drivetrain?: string;
        transmission?: string;
        type?: string;
        fuel?: string;
    };
}
export declare type Item = HotelItem | TransportItem | PetItem | HomeItem | VacationItem | FoodItem | ProductItem;
export declare type AnyItem = HotelItem & TransportItem & PetItem & HomeItem & VacationItem & FoodItem & ProductItem;
