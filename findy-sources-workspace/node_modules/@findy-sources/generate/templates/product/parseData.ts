import * as P from '@findy-sources/parse'
import * as U from '@findy-sources/util'
import * as R from 'ramda'

import { itemsPerPage, _origin } from './mapping'

const parse = P.parseHTML([
  {
    root: 'article[class="product-item "]',
    id: '@data-articlecode',
    title: 'a[class="product-item-link"]@title',
    photoUrl: 'img@src | makeUrl: https://',
    additionalPhotoUrls: 'img@data-altimage | makeUrl: https:// | valueToArray',
    url: `a[class="product-item-link"]@href | makeUrl: ${_origin}`,
    category: '| makeConst: product',
    attributes: {
      price: ['.price* | getNumber'],
      priceUnit: '| makeConst: USD',
      condition: '| makeConst: New | valueToArray',
      marketplace: '| makeConst: Retail'
    },
    location: { country: '| makeConst: US' }
  }
])

export default data => {
  const values = parse(data).map(({ attributes, ...value }) => ({
    ...value,
    attributes: {
      ...attributes,
      price: U.pipe(x => R.sort(R.subtract, x), x => x[0], U.toRange)(
        attributes.price
      )
    }
  }))

  return { values, hasMorePages: values.length === itemsPerPage }
}
