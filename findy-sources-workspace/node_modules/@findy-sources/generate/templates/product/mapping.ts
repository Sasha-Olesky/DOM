import * as M from '@findy-sources/mapping'

import { keywordMap, noKeywordMap } from './categoryMap'

export const itemsPerPage = 40
export const _origin = 'http://www2.hm.com'

const spec: M.MappingSpec = {
  product: {},
  'product:apparel': {},
  'product:apparel:*': {},
  'product:household': {},
  any: {
    category: M.pipe(
      (x, { keyword }) => (keyword ? keywordMap[x] : noKeywordMap[x]),
      M.toProp('_categories')
    ),
    geolocation: {
      country: M.allow('US'),
      radius: {
        min: M.pipe(M.allowIf(x => x === 0), M.noProp)
      }
    },
    price: {
      min: M.pipe(M.allowIf(min => min < 400), M.noProp)
    },
    keyword: M.toProp('q'),
    condition: M.pipe(M.allowIf(x => x.includes('New')), M.noProp),
    marketplace: M.pipe(M.allowIf(x => x.includes('Retail')), M.noProp),
    rating: () => undefined,
    profile: () => ({
      'page-size': itemsPerPage,
      sort: 'stock',
      image: 'model', // alternative: 'stillLife'
      _origin,
      _path: `/en_us/search-results/_jcr_content/search.display.html`
    })
  },
  variants: (assets: any) => {
    const { _categories, ...params } = assets

    return _categories.map(category => ({ page, request }) =>
      request({
        ...params, // shoud go first, so '_origin' could be overridden by entry from 'category'
        ...category,
        offset: page * itemsPerPage
      })
    )
  }
}

export const variants = M.specToVariants(spec)
