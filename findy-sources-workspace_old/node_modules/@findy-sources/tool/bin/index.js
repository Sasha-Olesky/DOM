#!/usr/bin/env node

const request = require('request-promise-native')
const path = require('path')
if (!process.env.SOURCES_LIB) {
  process.exitCode = 1
  console.error('SOURCES_LIB is not set')
} else {
  const paths = {
    sources: path.resolve(process.cwd(), process.env.SOURCES_LIB),
    app: path.join(__dirname, '../build')
  }

  const express = require('express')
  const serve = express.static
  const bodyParser = require('body-parser')

  const app = express()
  app.use(bodyParser.json())
  app.use('/proxy', function(req, res) {
    request({
      ...req.body,
      gzip: true,
      timeout: 10000,
      jar: true,
      followAllRedirects: true
    })
      .then(result =>
        res.send(result)
      )
      .catch(e => {
        if (e.statusCode) {
          res.status(e.statusCode).send(e.error)
        } else {
          res.status(500).send(e.message)
        }
      })
  })
  app.use('/sources.js', serve(paths.sources))
  app.use('/', serve(paths.app))
  app.listen(3000, () => console.log('Tool is listening on http://localhost:3000/'))

  // open opera if requested
  if (process.argv.includes('--opera')) {
    var opn = require('opn')
    opn('http://localhost:3000/', {
      app: ['opera', '--disable-web-security', '--user-data-dir']
    }).catch(e => console.log(e))
  }
}
